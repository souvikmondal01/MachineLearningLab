#UNIVARIATE SELECTION


import pandas as pd

import numpy as np

from sklearn.feature_selection import SelectKBest

from sklearn.feature_selection import chi2

data = pd.read_csv("train.csv")

x = data.iloc[:,0:20]  #independent columns 

y = data.iloc[:, -1]   #target column i.e price range

#apply SelectKBest class to extract top 10 best features

bestfeatures = SelectKBest (score_func=chi2, k=10)

fit = bestfeatures.fit(x,y) 

dfscores = pd.DataFrame(fit.scores_)

dfcolumns = pd.DataFrame(X.columns)

#concat two dataframes for better visualization



featureScores = pd.concat([dfcolumns, dfscores], axis=1) 

featureScores.columns = ['Specs', 'Score'] 

print (featureScores.nlargest (10, 'Score')) #print 10 best features




#FEATURE IPORTANCE


import pandas as pd

import numpy as np

data = pd.read_csv("C:\\Users\\SOUVIK MANDAL\\Desktop\\sem5\\ML lab\\train.csv")

X = data.iloc[:,0:20]  #independent columns

y = data.iloc[:, -1]    #target column i.e price range

from sklearn.ensemble import ExtraTreesClassifier

import matplotlib.pyplot as plt

model = ExtraTreesClassifier()

model.fit(x,y)

print(model.feature_importances_) 

feat_importances = pd.Series(model.feature_importances_, index=X.columns)

feat_importances.nlargest(10).plot(kind='barh') 

plt.show()




#CORRELATION MATRIX WITH HEATMAP

import pandas as pd

import numpy as np

import seaborn as sns

data = pd.read_csv("C:\\Users\\SOUVIK MANDAL\\Desktop\\sem5\\ML lab\\train.csv")

X = data.iloc[:,0:20]   #independent columns

y = data.iloc[:, -1] #target column i.e price

#get correlations of each features in dataset

corrmat = data.corr()

top_corr_features = corrmat.index

plt.figure(figsize=(20,20))

#plot heat map

g=sns.heatmap(data[top_corr_features].corr(), annot=True, cmap="RdYlGn") 